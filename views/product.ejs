<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %> - Product Management
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/navbar.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            /* Add padding to prevent navbar overlap */
            /* padding-top: 80px; */
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .navigation {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }

        .nav-btn {
            padding: 12px 25px;
            background: white;
            color: #6a11cb;
            border: 2px solid #6a11cb;
            border-radius: 6px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .nav-btn:hover {
            background: #6a11cb;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(106, 17, 203, 0.3);
        }

        .nav-btn.active {
            background: #6a11cb;
            color: white;
        }

        .form-container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .form-title {
            font-size: 1.8rem;
            margin-bottom: 20px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .form-title i {
            color: #6a11cb;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
        }

        input,
        select,
        textarea {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input:focus,
        select:focus,
        textarea:focus {
            outline: none;
            border-color: #6a11cb;
            box-shadow: 0 0 0 3px rgba(106, 17, 203, 0.1);
        }

        .form-row {
            display: flex;
            gap: 20px;
        }

        .form-col {
            flex: 1;
        }

        .btn {
            padding: 12px 25px;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(106, 17, 203, 0.3);
        }

        .btn-secondary {
            background: #95a5a6;
        }

        .btn-edit {
            background: #3498db;
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        .btn-delete {
            background: #e74c3c;
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 25px;
        }

        .error-message {
            color: #e74c3c;
            font-size: 0.9rem;
            margin-top: 5px;
            display: none;
        }

        .flash-message {
            padding: 12px 20px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
            animation: fadeIn 0.5s;
        }

        .flash-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .flash-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .image-preview {
            width: 200px;
            height: 200px;
            border: 2px dashed #ddd;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 10px;
            overflow: hidden;
            background-color: #f8f9fa;
        }

        .image-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
        }

        /* Container-fluid Styles - FULL SCREEN & RESPONSIVE */
        .container-fluid {
            width: 100%;
            padding: 0;
            margin: 0;
        }

        .products-list {
            background: white;
            padding: 40px 20px;
            border-radius: 0;
            box-shadow: none;
            margin-top: 0;
            width: 100%;
        }

        .products-list h3 {
            margin-bottom: 30px;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 2rem;
            text-align: center;
            justify-content: center;
        }

        /* Updated Product Grid for Full Screen Responsive Layout */
        .product-grid {
            display: grid;
            gap: 25px;
            width: 100%;
            max-width: 100%;
            margin: 0 auto;
        }

        /* Responsive Grid Layout */
        /* Extra Small (xs) - 1 column */
        .product-grid {
            grid-template-columns: repeat(1, 1fr);
            padding: 0 15px;
        }

        /* Small (sm) - 2 columns */
        @media (min-width: 576px) {
            .product-grid {
                grid-template-columns: repeat(2, 1fr);
                padding: 0 20px;
            }
        }

        /* Medium (md) - 3 columns */
        @media (min-width: 768px) {
            .product-grid {
                grid-template-columns: repeat(3, 1fr);
                padding: 0 30px;
            }
        }

        /* Large (lg) - 4 columns */
        @media (min-width: 992px) {
            .product-grid {
                grid-template-columns: repeat(4, 1fr);
                padding: 0 40px;
            }
        }

        /* Extra Large (xl) - 5 columns */
        @media (min-width: 1200px) {
            .product-grid {
                grid-template-columns: repeat(5, 1fr);
                padding: 0 50px;
            }
        }

        /* Extra Extra Large (xxl) - 6 columns */
        @media (min-width: 1400px) {
            .product-grid {
                grid-template-columns: repeat(6, 1fr);
                padding: 0 60px;
                max-width: 1400px;
                margin: 0 auto;
            }
        }

        .product-card {
            border: 1px solid #e9ecef;
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
            background: white;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            border-color: #6a11cb;
        }

        .product-image {
            height: 180px;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            border-bottom: 1px solid #e9ecef;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image img {
            transform: scale(1.05);
        }

        .product-info {
            padding: 20px;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        .product-info h4 {
            color: #2c3e50;
            margin-bottom: 12px;
            font-size: 1.1rem;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            font-weight: 600;
        }

        .product-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 12px;
            font-size: 0.9rem;
        }

        .product-price {
            color: #6a11cb;
            font-weight: 700;
            font-size: 1.2rem;
        }

        .product-quantity {
            color: #6c757d;
            background: #f8f9fa;
            padding: 4px 8px;
            border-radius: 6px;
            font-size: 0.8rem;
        }

        .product-colors {
            display: flex;
            gap: 6px;
            margin-bottom: 12px;
            flex-wrap: wrap;
        }

        .color-badge {
            padding: 4px 10px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .product-description {
            font-size: 0.85rem;
            color: #6c757d;
            margin-bottom: 15px;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            line-height: 1.5;
            flex-grow: 1;
        }

        .product-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            display: inline-block;
            margin-bottom: 15px;
            text-align: center;
            width: fit-content;
        }

        .status-active {
            background-color: #d1fae5;
            color: #065f46;
            border: 1px solid #a7f3d0;
        }

        .status-inactive {
            background-color: #fee2e2;
            color: #991b1b;
            border: 1px solid #fecaca;
        }

        .product-actions {
            display: flex;
            gap: 10px;
            justify-content: space-between;
            margin-top: auto;
        }

        .product-actions .btn {
            padding: 8px 16px;
            font-size: 0.85rem;
            border-radius: 8px;
            flex: 1;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .product-actions .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .btn-edit {
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        }

        .btn-delete {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }

        /* Mobile Responsive Adjustments */
        @media (max-width: 575px) {
            body {
                padding-top: 70px;
            }

            .products-list {
                padding: 30px 15px;
            }

            .products-list h3 {
                font-size: 1.5rem;
                margin-bottom: 20px;
            }

            .product-grid {
                gap: 15px;
            }

            .product-image {
                height: 150px;
            }

            .product-info {
                padding: 15px;
            }

            .product-actions {
                flex-direction: column;
                gap: 8px;
            }

            .product-actions .btn {
                width: 100%;
            }

            header h1 {
                font-size: 2rem;
            }
        }

        /* Keep original container styles for the form section */
        @media (max-width: 768px) {
            body {
                padding-top: 70px;
            }

            .container {
                padding: 10px;
            }

            .navigation {
                flex-direction: column;
            }

            .form-row {
                flex-direction: column;
                gap: 0;
            }
        }

        /* Extra small devices */
        @media (max-width: 576px) {
            body {
                padding-top: 60px;
            }

            .form-container {
                padding: 20px;
            }
        }
    </style>
</head>

<body>
    <!-- Navbar -->
    <%- include('./layout/navbar.ejs') %>

        <div class="container">
            <header>
                <h1>Product Management</h1>
                <p>Create and manage your products</p>
            </header>

            <div class="navigation">
                <a href="/category" class="nav-btn">
                    <i class="fas fa-tags"></i> Manage Categories
                </a>
                <a href="/product" class="nav-btn active">
                    <i class="fas fa-cube"></i> Manage Products
                </a>
            </div>

            <!-- Flash Messages -->
            <% if (success_msg && success_msg.length> 0) { %>
                <div class="flash-message flash-success">
                    <i class="fas fa-check-circle"></i>
                    <span>
                        <%= success_msg %>
                    </span>
                </div>
                <% } %>

                    <% if (error_msg && error_msg.length> 0) { %>
                        <div class="flash-message flash-error">
                            <i class="fas fa-exclamation-circle"></i>
                            <span>
                                <%= error_msg %>
                            </span>
                        </div>
                        <% } %>

                            <div class="form-container">
                                <h2 class="form-title"><i class="fas fa-plus-circle"></i> Create New Product</h2>

                                <form id="createProductForm" method="POST" action="/product/create"
                                    enctype="multipart/form-data">
                                    <div class="form-group">
                                        <label for="productName">Product Name *</label>
                                        <input type="text" name="product_name" id="productName"
                                            placeholder="Enter product name" required>
                                        <div class="error-message" id="productNameError">Product name is required</div>
                                    </div>

                                    <div class="form-row">
                                        <div class="form-col">
                                            <div class="form-group">
                                                <label for="productCategory">Category *</label>
                                                <select id="productCategory" name="category_id" required>
                                                    <option value="">Select a category</option>
                                                    <% if (categories && categories.length> 0) { %>
                                                        <% categories.forEach(function(category) { %>
                                                            <option value="<%= category._id %>">
                                                                <%= category.category_name %>
                                                            </option>
                                                            <% }); %>
                                                                <% } else { %>
                                                                    <option value="">No categories available</option>
                                                                    <% } %>
                                                </select>
                                                <div class="error-message" id="productCategoryError">Please select a
                                                    category</div>
                                            </div>
                                        </div>

                                        <div class="form-col">
                                            <div class="form-group">
                                                <label for="productPrice">Price *</label>
                                                <input type="number" name="price" id="productPrice"
                                                    placeholder="Enter price" min="0" step="0.01" required>
                                                <div class="error-message" id="productPriceError">Please enter a valid
                                                    price
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="color">Colors *</label>
                                        <input type="text" id="color" name="color"
                                            placeholder="Enter product colors (comma separated)" required>
                                        <div class="error-message" id="productColorError">Please enter at least one
                                            color
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="productDescription">Description *</label>
                                        <textarea id="productDescription" name="description" rows="4"
                                            placeholder="Enter product description" required></textarea>
                                        <div class="error-message" id="productDescriptionError">Product description is
                                            required</div>
                                    </div>

                                    <div class="form-row">
                                        <div class="form-col">
                                            <div class="form-group">
                                                <label for="productQuantity">Quantity *</label>
                                                <input type="number" id="productQuantity" name="quantity"
                                                    placeholder="Enter quantity" min="0" required>
                                                <div class="error-message" id="productQuantityError">Please enter a
                                                    valid
                                                    quantity</div>
                                            </div>
                                        </div>

                                        <div class="form-col">
                                            <div class="form-group">
                                                <label for="productBrand">Brand</label>
                                                <input type="text" id="productBrand" name="brand"
                                                    placeholder="Enter brand name">
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="productImage">Product Image *</label>
                                        <input type="file" id="productImage" name="image" accept="image/*" required>
                                        <div class="error-message" id="productImageError">Please select a product image
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="productStatus">Status</label>
                                        <select id="productStatus" name="status">
                                            <option value="active">Active</option>
                                            <option value="inactive">Inactive</option>
                                        </select>
                                    </div>

                                    <div class="form-actions">
                                        <button type="reset" class="btn btn-secondary">
                                            <i class="fas fa-redo"></i> Reset
                                        </button>
                                        <button type="submit" class="btn">
                                            <i class="fas fa-save"></i> Create Product
                                        </button>
                                    </div>
                                </form>
                            </div>
        </div>

        <!-- Existing Products List - FULL SCREEN CONTAINER-FLUID -->
        <div class="container-fluid">
            <div class="products-list">
                <h3><i class="fas fa-cubes"></i> Existing Products</h3>

                <% if (products && products.length> 0) { %>
                    <div class="product-grid">
                        <% products.forEach(function(product) { %>
                            <div class="product-card">
                                <div class="product-image">
                                    <% if (product.image) { %>
                                        <img src="/<%= product.image %>" alt="<%= product.product_name %>">
                                        <% } else { %>
                                            <i class="fas fa-cube" style="font-size: 3rem; color: #6c757d;"></i>
                                            <% } %>
                                </div>
                                <div class="product-info">
                                    <h4>
                                        <%= product.product_name %>
                                    </h4>
                                    <div class="product-meta">
                                        <span class="product-price">$<%= product.price %></span>
                                        <span class="product-quantity">Qty: <%= product.quantity %></span>
                                    </div>
                                    <% if (product.color && product.color.length> 0) { %>
                                        <div class="product-colors">
                                            <% const colors=Array.isArray(product.color) ? product.color :
                                                product.color.split(','); %>
                                                <% colors.slice(0, 3).forEach(function(color) { %>
                                                    <span class="color-badge">
                                                        <%= color.trim() %>
                                                    </span>
                                                    <% }); %>
                                                        <% if (colors.length> 3) { %>
                                                            <span class="color-badge">+<%= colors.length - 3 %>
                                                                    more</span>
                                                            <% } %>
                                        </div>
                                        <% } %>
                                            <p class="product-description">
                                                <%= product.description && product.description.length> 80 ?
                                                    product.description.substring(0, 80) + '...' :
                                                    product.description %>
                                            </p>
                                            <span
                                                class="product-status <%= product.status === 'active' ? 'status-active' : 'status-inactive' %>">
                                                <%= product.status %>
                                            </span>
                                            <div class="product-actions">
                                                <button class="btn btn-edit"
                                                    onclick="editProduct('<%= product._id %>')">
                                                    <i class="fas fa-edit"></i> Edit
                                                </button>
                                                <button class="btn btn-delete"
                                                    onclick="deleteProductEnhanced('<%= product._id %>')">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </div>
                                </div>
                            </div>
                            <% }); %>
                    </div>
                    <% } else { %>
                        <p style="text-align: center; color: #6c757d; font-size: 1.1rem; padding: 40px;">
                            No products found. Create your first product above.
                        </p>
                        <% } %>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            console.log('Flash messages on page load:');
            console.log('Success:', '<%= success_msg %>');
            console.log('Error:', '<%= error_msg %>');
            // Delete product function without alerts
            async function deleteProduct(productId) {
                const deleteBtn = event?.target;
                const originalText = deleteBtn?.innerHTML;

                // Show loading state
                if (deleteBtn) {
                    deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
                    deleteBtn.disabled = true;
                }

                try {
                    const response = await fetch(`/product/delete/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        credentials: 'same-origin' // Important for sessions
                    });

                    console.log('Response status:', response.status);
                    console.log('Response redirected:', response.redirected);

                    // If server redirects (which it should for flash messages), follow the redirect
                    if (response.redirected) {
                        console.log('Redirecting to:', response.url);
                        window.location.href = response.url;
                        return;
                    }

                    // If we get a JSON response (alternative approach)
                    if (response.ok) {
                        try {
                            const data = await response.json();
                            if (data.success) {
                                // Remove product card with animation
                                const productCard = deleteBtn.closest('.product-card');
                                if (productCard) {
                                    productCard.style.transition = 'all 0.3s ease';
                                    productCard.style.opacity = '0';
                                    productCard.style.transform = 'translateY(-20px)';

                                    setTimeout(() => {
                                        productCard.remove();
                                        checkEmptyState();
                                    }, 300);
                                }
                                // Flash message will be shown after page reload
                                setTimeout(() => {
                                    window.location.reload();
                                }, 500);
                            }
                        } catch (jsonError) {
                            // If not JSON, assume redirect should happen
                            window.location.reload();
                        }
                    } else {
                        // If error, reload to show error flash message
                        window.location.reload();
                    }

                } catch (error) {
                    console.error('Error:', error);
                    // Restore button and reload to potentially show error message
                    if (deleteBtn) {
                        deleteBtn.innerHTML = originalText;
                        deleteBtn.disabled = false;
                    }
                    window.location.reload();
                }
            }

            // Edit product function
            function editProduct(productId) {
                // Show loading state on the button
                const editBtn = event?.target;
                const originalText = editBtn?.innerHTML;

                if (editBtn) {
                    editBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading...';
                    editBtn.disabled = true;
                }

                // Redirect to edit page
                window.location.href = `/product/edit/${productId}`;
            }

            // Toast notification function
            function showToast(message, type = 'info') {
                // Remove existing toasts
                const existingToasts = document.querySelectorAll('.custom-toast');
                existingToasts.forEach(toast => toast.remove());

                const toast = document.createElement('div');
                toast.className = `custom-toast toast-${type}`;
                toast.innerHTML = `
        <div class="toast-content">
            <i class="fas ${type === 'Success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
            <span>${message}</span>
        </div>
    `;

                // Add styles if not already added
                if (!document.querySelector('#toast-styles')) {
                    const styles = document.createElement('style');
                    styles.id = 'toast-styles';
                    styles.textContent = `
            .custom-toast {
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 12px 20px;
                border-radius: 8px;
                color: white;
                z-index: 10000;
                animation: slideInRight 0.3s ease;
                max-width: 300px;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }
            .toast-success { 
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                border-left: 4px solid #047857;
            }
            .toast-error { 
                background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                border-left: 4px solid #b91c1c;
            }
            .toast-info { 
                background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
                border-left: 4px solid #1d4ed8;
            }
            .toast-content {
                display: flex;
                align-items: center;
                gap: 10px;
                font-weight: 500;
            }
            .toast-content i {
                font-size: 1.1rem;
            }
            @keyframes slideInRight {
                from { 
                    transform: translateX(100%); 
                    opacity: 0; 
                }
                to { 
                    transform: translateX(0); 
                    opacity: 1; 
                }
            }
            @keyframes slideOutRight {
                from { 
                    transform: translateX(0); 
                    opacity: 1; 
                }
                to { 
                    transform: translateX(100%); 
                    opacity: 0; 
                }
            }
        `;
                    document.head.appendChild(styles);
                }

                document.body.appendChild(toast);

                // Auto remove after 4 seconds
                setTimeout(() => {
                    toast.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => {
                        if (toast.parentNode) {
                            toast.remove();
                        }
                    }, 300);
                }, 4000);
            }

            // Check if products list is empty
            function checkEmptyState() {
                const productGrid = document.querySelector('.product-grid');
                const productsList = document.querySelector('.products-list');

                if (productGrid && productGrid.children.length === 0) {
                    const emptyState = document.createElement('div');
                    emptyState.className = 'empty-state';
                    emptyState.innerHTML = `
            <div style="text-align: center; padding: 60px 20px; color: #6c757d;">
                <i class="fas fa-box-open" style="font-size: 4rem; margin-bottom: 20px; opacity: 0.5;"></i>
                <h3 style="margin-bottom: 10px; color: #495057;">No Products Found</h3>
                <p>All products have been deleted. Create a new product to get started.</p>
            </div>
        `;
                    productGrid.appendChild(emptyState);
                }
            }

            // Enhanced version with better error handling for API response
            async function deleteProductEnhanced(productId) {
                const deleteBtn = event?.target;
                const originalText = deleteBtn?.innerHTML;

                // Show loading state
                if (deleteBtn) {
                    deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                    deleteBtn.disabled = true;
                }

                try {
                    const response = await fetch(`/product/delete/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });

                    // Handle redirect response (for flash messages)
                    if (response.redirected) {
                        window.location.href = response.url;
                        return;
                    }

                    // Handle JSON response
                    if (response.ok) {
                        const data = await response.json();

                        if (data.success) {
                            showToast('Product deleted successfully!', 'Success');

                            // Smooth removal animation
                            const productCard = deleteBtn.closest('.product-card');
                            if (productCard) {
                                productCard.style.transition = 'all 0.4s ease';
                                productCard.style.opacity = '0';
                                productCard.style.transform = 'scale(0.8) translateY(20px)';

                                setTimeout(() => {
                                    productCard.remove();
                                    checkEmptyState();
                                }, 400);
                            }
                        } else {
                            throw new Error(data.message || 'Failed to delete product');
                        }
                    } else {
                        throw new Error(`Server returned ${response.status}: ${response.statusText}`);
                    }

                } catch (error) {
                    console.error('Delete error:', error);
                    showToast('Error deleting product. Please try again.', 'error');

                    // Restore button state
                    if (deleteBtn) {
                        deleteBtn.innerHTML = originalText;
                        deleteBtn.disabled = false;
                    }
                }
            }
        </script>
</body>

</html>